image: adoptopenjdk/openjdk11:jdk-11.0.10_9-ubuntu
    
stages:
  - build
  - deploy
  - test
  - quality
    
before_script:
#  - echo `pwd` # debug
#  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle
      
cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches
    
build:
  stage: build
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/
      - actionfx-core/build/
      - actionfx-testing/build/
      - actionfx-controlsfx/build/
      - actionfx-spring-boot/build/
      - actionfx-app-sample/build/
    when: always
    expire_in: 1 week
    
unittest:
  stage: test
  script:
    - ./gradlew check
  artifacts:
    paths:
      - build/
      - actionfx-core/build/
      - actionfx-testing/build/
      - actionfx-controlsfx/build/
      - actionfx-spring-boot/build/
      - actionfx-app-sample/build/
    when: always
    expire_in: 1 week

integrationtest:
  stage: test
  script:
    - apt-get update && apt-get install -y libxtst6 libgtk2.0-0
    - ./gradlew integrationTest
  artifacts:
    paths:
      - build/
      - actionfx-core/build/
      - actionfx-testing/build/
      - actionfx-controlsfx/build/
      - actionfx-spring-boot/build/
      - actionfx-app-sample/build/
    when: always
    expire_in: 1 week
    
reportCodeCoverage:
  stage: quality
  script:
    - ./gradlew codeCoverageReport -x test
    - ./gradlew sonarqube -x test
  artifacts:
    paths:
      - build/
      - actionfx-core/build/
      - actionfx-testing/build/
      - actionfx-controlsfx/build/
      - actionfx-spring-boot/build/
      - actionfx-app-sample/build/
    when: always
    expire_in: 1 week

publishJavaDoc:
  stage: deploy
  when: manual
  variables:
    GRGIT_USER: ${GRGIT_USER}
    GRGIT_PASS: ${GRGIT_PASS}    
  script:
    - ./gradlew copyJavaDocToDocs -x test
    - ./gradlew gitPublishPush -x test 
    
releaseToMavenCentral:
  stage: deploy
  when: manual
  script:
    - export GPG_TTY=$(tty)
    - apt-get update
    - apt-get install -y gnupg2
    - apt-get install -y gpg-agent
    - gpg2 -v --list-keys
    - echo "pinentry-mode loopback" > ~/.gnupg/gpg.conf
    - echo "allow-loopback-pinentry" > ~/.gnupg/gpg-agent.conf
    - gpg2 -v --passphrase $GNUPGP_PASSPHRASE --batch --import $GNUPGP_PRIVATE_KEY_FILE
    - gpg2 -v --passphrase $GNUPGP_PASSPHRASE --export-secret-key --batch -o ~/.gnupg/secring.gpg
#    - ./gradlew publishAllPublicationsToSonatypeRepository closeAndReleaseSonatypeStagingRepository -x test 
    - ./gradlew publishAllPublicationsToSonatypeRepository closeSonatypeStagingRepository -x test -Psigning.password=$GNUPGP_PASSPHRASE -Psigning.keyId=$SECRET_KEY -Psigning.gnupg.keyName=$SECRET_KEY -Psigning.secretKeyRingFile=/root/.gnupg/secring.gpg
  artifacts:
    paths:
      - build/
      - actionfx-core/build/
      - actionfx-testing/build/
      - actionfx-controlsfx/build/
      - actionfx-spring-boot/build/
      - actionfx-app-sample/build/
    when: always
    expire_in: 1 week
  
