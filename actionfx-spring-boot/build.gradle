plugins {
    id("org.openjfx.javafxplugin") version "${javafxPluginVersion}"
    id "library-publishing-conventions"
}

description = "afx-spring-boot: This module contains integration classes for using ActionFX with the Spring Framework."

dependencies {
	
	    // JAVAFX DEPENDENCIES    
        javafx {
            version = "${javafxVersion}"
            modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.web', 'javafx.swing' ]
        }
        
        api project(":actionfx-core")

		// Spring Dependencies are not declared as "api" dependencies. We just want these dependencies at
		// compile time. It is up to the user of this module, which exact version of Spring or Spring Boot to use.
		implementation group: "org.springframework", name: "spring-core", version: "${springVersion}"
		implementation group: "org.springframework", name: "spring-context", version: "${springVersion}"
		implementation group: "org.springframework", name: "spring-beans", version: "${springVersion}"
		
		implementation group: "ch.qos.logback", name: "logback-classic", version: "${logbackVersion}"
		
        testImplementation project(":actionfx-testing")

		testImplementation group: "org.springframework.boot", name: "spring-boot-starter-test", version: "${springBootVersion}"
		testImplementation group: "org.springframework", name: "spring-test", version: "${springVersion}"

        testImplementation group: "org.testfx", name: "openjfx-monocle", version: "${testfxMonocleVerion}"
    	testImplementation group: "org.testfx", name: "testfx-core", version: "${testFxVersion}"
    	testImplementation group: "org.testfx", name: "testfx-junit5", version: "${testFxVersion}"

		testImplementation group: "org.mockito", name: "mockito-core", version: "${mockitoVersion}"
		testImplementation group: "org.mockito", name: "mockito-junit-jupiter", version: "${mockitoVersion}"
}

test {    
		forkEvery = 1
    	maxParallelForks = 1       
}

integrationTest {    
		forkEvery = 1
    	maxParallelForks = 1       
}


