name: ActionFX Release Management

on:
  push:
    branches: [ 'master' ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Import GPG keys
        run: |
          gpg --import --batch <(echo "$GNUPGP_PRIVATE_KEY") &> /dev/null
          # Gradle doesn't support GPG 2.1 and later: https://github.com/gradle/gradle/issues/888
          gpg --export-secret-keys --pinentry-mode loopback --passphrase="$GNUPGP_PASSPHRASE" > $HOME/.gnupg/secring.gpg
          rm -rf /tmp/secret
        env:
          GNUPGP_PRIVATE_KEY: ${{ secrets.GNUPGP_PRIVATE_KEY }}
          GNUPGP_PASSPHRASE: ${{ secrets.GNUPGP_PASSPHRASE }}

      - name: Run Tests (Linux)
        if: runner.os == 'Linux'
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew build test

      - name: Release to Maven Central
        run: ./gradlew publishAllPublicationsToSonatypeRepository closeAndReleaseSonatypeStagingRepository -i -x test -x integrationTest --no-daemon
        env:
          GNUPGP_PRIVATE_KEY: ${{ secrets.GNUPGP_PRIVATE_KEY }}
          GNUPGP_PASSPHRASE: ${{ secrets.GNUPGP_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingKey: ${{secrets.ORG_GRADLE_PROJECT_signingKey}}
          ORG_GRADLE_PROJECT_signingPassword: ${{secrets.ORG_GRADLE_PROJECT_signingPassword}}
          ORG_GRADLE_PROJECT_SONATYPEPASSWORD: ${{secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD}}
          ORG_GRADLE_PROJECT_SONATYPEUSERNAME: ${{secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME}}

      
      - name: Publish Javadoc
        run: |
          ./gradlew copyJavaDocToDocs gitPublishPush -x test --no-daemon
        env:
          GRGIT_USER: ${{ secrets.GRGIT_USER }}
          GRGIT_PASS: ${{ secrets.GRGIT_PASS }}
