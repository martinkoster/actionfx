name: ActionFX CI Build- and Release Management

on:
  push:
    branches: [ '**' ]  # Trigger on all branches

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            .gradle/wrapper
            .gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set Gradle user home
        run: echo "GRADLE_USER_HOME=${GITHUB_WORKSPACE}/.gradle" >> $GITHUB_ENV

      - name: Assemble project
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew assemble --no-daemon

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/
            actionfx-core/build/
            actionfx-testing/build/
            actionfx-controlsfx/build/
            actionfx-spring-boot/build/
            actionfx-appfactory/build/
            actionfx-app-sample/build/

  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Run unit tests
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew check --no-daemon

      - name: Upload unit test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-artifacts
          path: |
            build/
            actionfx-core/build/
            actionfx-testing/build/
            actionfx-controlsfx/build/
            actionfx-spring-boot/build/
            actionfx-appfactory/build/
            actionfx-app-sample/build/

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Run integration tests
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew integrationTest --no-daemon

      - name: Upload integration test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-artifacts
          path: |
            build/
            actionfx-core/build/
            actionfx-testing/build/
            actionfx-controlsfx/build/
            actionfx-spring-boot/build/
            actionfx-appfactory/build/
            actionfx-app-sample/build/

  code-quality:
    needs: [ unit-test, integration-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Generate code coverage report
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew codeCoverageReport -x test --no-daemon

      - name: Run SonarQube
        run: |
          export DISPLAY=:90
          Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew sonar -x test --no-daemon

      - name: Upload quality artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quality-artifacts
          path: |
            build/
            actionfx-core/build/
            actionfx-testing/build/
            actionfx-controlsfx/build/
            actionfx-spring-boot/build/
            actionfx-appfactory/build/
            actionfx-app-sample/build/

  publish-javadoc:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Publish Javadoc
        run: |
          ./gradlew copyJavaDocToDocs gitPublishPush -x test --no-daemon
        env:
          GRGIT_USER: ${{ secrets.GRGIT_USER }}
          GRGIT_PASS: ${{ secrets.GRGIT_PASS }}

  release-to-maven-central:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Signing Key
        run: |
          echo "signingKey=${{ secrets.SIGNING_KEY }}" >> $GITHUB_ENV
          echo "signingPassword=${{ secrets.SIGNING_PASSWORD }}" >> $GITHUB_ENV

      - name: Release to Maven Central
        run: ./gradlew publishAllPublicationsToSonatypeRepository closeAndReleaseSonatypeStagingRepository -x test --no-daemon
